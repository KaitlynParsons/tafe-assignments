/* 
 *  Student Number: 450950837
 *  Name:           Kaitlyn Parsons
 *  Date:           13/09/2018 
 *  Purpose:        Nodes for the double link list
 *  Known Bugs:     None.
 */
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ArithmeticChallenge
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A node. </summary>
    ///
    /// <remarks>   Parsons, 16-Sep-18. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    class Node
    {

        /// <summary>   my value. </summary>
        int myValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the next. </summary>
        ///
        /// <value> The next. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        Node previous, next;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   constructor. </summary>
        ///
        /// <remarks>   Parsons, 16-Sep-18. </remarks>
        ///
        /// <param name="aValue">   . </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Node(int aValue)
        {
            myValue = aValue;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   gets the answer value. </summary>
        ///
        /// <remarks>   Parsons, 16-Sep-18. </remarks>
        ///
        /// <returns>   The value. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public int getValue()
        {
            return this.myValue;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   sets the answer value. </summary>
        ///
        /// <remarks>   Parsons, 16-Sep-18. </remarks>
        ///
        /// <param name="aValue">   . </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public void setMyValue(int aValue)
        {
            myValue = aValue;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   sets the next node. </summary>
        ///
        /// <remarks>   Parsons, 16-Sep-18. </remarks>
        ///
        /// <param name="aNode">    . </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public void setNext(Node aNode)
        {
            this.next = aNode;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   gets the next node. </summary>
        ///
        /// <remarks>   Parsons, 16-Sep-18. </remarks>
        ///
        /// <returns>   The next. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Node getNext()
        {
            return this.next;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   sets the previous node. </summary>
        ///
        /// <remarks>   Parsons, 16-Sep-18. </remarks>
        ///
        /// <param name="aNode">    . </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public void setPrevious(Node aNode)
        {
            this.previous = aNode;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   gets the previous node. </summary>
        ///
        /// <remarks>   Parsons, 16-Sep-18. </remarks>
        ///
        /// <returns>   The previous. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Node getPrevious()
        {
            return this.previous;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   converts the value to a string variable. </summary>
        ///
        /// <remarks>   Parsons, 16-Sep-18. </remarks>
        ///
        /// <returns>   A string. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string tostring()
        {
            return myValue.ToString();
        }
    }
}
